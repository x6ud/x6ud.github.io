{"version":3,"file":"Editor.d170a79b.js","sources":["../../node_modules/naive-ui/es/_internal/icons/Error.js","../../node_modules/naive-ui/es/_internal/icons/Info.js","../../node_modules/naive-ui/es/_internal/icons/Success.js","../../node_modules/naive-ui/es/progress/styles/light.js","../../node_modules/naive-ui/es/progress/src/styles/index.cssr.js","../../node_modules/naive-ui/es/progress/src/Line.js","../../node_modules/naive-ui/es/progress/src/Circle.js","../../node_modules/naive-ui/es/progress/src/MultipleCircle.js","../../node_modules/naive-ui/es/progress/src/Progress.js","../../src/Editor/Editor.ts?vue&type=script&src&lang.ts"],"sourcesContent":["import { h } from 'vue';\nimport { replaceable } from './replaceable';\nexport default replaceable('error', h(\"svg\", { viewBox: \"0 0 48 48\", version: \"1.1\", xmlns: \"http://www.w3.org/2000/svg\" },\n    h(\"g\", { stroke: \"none\", \"stroke-width\": \"1\", \"fill-rule\": \"evenodd\" },\n        h(\"g\", { \"fill-rule\": \"nonzero\" },\n            h(\"path\", { d: \"M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M17.8838835,16.1161165 L17.7823881,16.0249942 C17.3266086,15.6583353 16.6733914,15.6583353 16.2176119,16.0249942 L16.1161165,16.1161165 L16.0249942,16.2176119 C15.6583353,16.6733914 15.6583353,17.3266086 16.0249942,17.7823881 L16.1161165,17.8838835 L22.233,24 L16.1161165,30.1161165 L16.0249942,30.2176119 C15.6583353,30.6733914 15.6583353,31.3266086 16.0249942,31.7823881 L16.1161165,31.8838835 L16.2176119,31.9750058 C16.6733914,32.3416647 17.3266086,32.3416647 17.7823881,31.9750058 L17.8838835,31.8838835 L24,25.767 L30.1161165,31.8838835 L30.2176119,31.9750058 C30.6733914,32.3416647 31.3266086,32.3416647 31.7823881,31.9750058 L31.8838835,31.8838835 L31.9750058,31.7823881 C32.3416647,31.3266086 32.3416647,30.6733914 31.9750058,30.2176119 L31.8838835,30.1161165 L25.767,24 L31.8838835,17.8838835 L31.9750058,17.7823881 C32.3416647,17.3266086 32.3416647,16.6733914 31.9750058,16.2176119 L31.8838835,16.1161165 L31.7823881,16.0249942 C31.3266086,15.6583353 30.6733914,15.6583353 30.2176119,16.0249942 L30.1161165,16.1161165 L24,22.233 L17.8838835,16.1161165 L17.7823881,16.0249942 L17.8838835,16.1161165 Z\" })))));\n","import { h } from 'vue';\nimport { replaceable } from './replaceable';\nexport default replaceable('info', h(\"svg\", { viewBox: \"0 0 28 28\", version: \"1.1\", xmlns: \"http://www.w3.org/2000/svg\" },\n    h(\"g\", { stroke: \"none\", \"stroke-width\": \"1\", \"fill-rule\": \"evenodd\" },\n        h(\"g\", { \"fill-rule\": \"nonzero\" },\n            h(\"path\", { d: \"M14,2 C20.6274,2 26,7.37258 26,14 C26,20.6274 20.6274,26 14,26 C7.37258,26 2,20.6274 2,14 C2,7.37258 7.37258,2 14,2 Z M14,11 C13.4477,11 13,11.4477 13,12 L13,12 L13,20 C13,20.5523 13.4477,21 14,21 C14.5523,21 15,20.5523 15,20 L15,20 L15,12 C15,11.4477 14.5523,11 14,11 Z M14,6.75 C13.3096,6.75 12.75,7.30964 12.75,8 C12.75,8.69036 13.3096,9.25 14,9.25 C14.6904,9.25 15.25,8.69036 15.25,8 C15.25,7.30964 14.6904,6.75 14,6.75 Z\" })))));\n","import { h } from 'vue';\nimport { replaceable } from './replaceable';\nexport default replaceable('success', h(\"svg\", { viewBox: \"0 0 48 48\", version: \"1.1\", xmlns: \"http://www.w3.org/2000/svg\" },\n    h(\"g\", { stroke: \"none\", \"stroke-width\": \"1\", \"fill-rule\": \"evenodd\" },\n        h(\"g\", { \"fill-rule\": \"nonzero\" },\n            h(\"path\", { d: \"M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M32.6338835,17.6161165 C32.1782718,17.1605048 31.4584514,17.1301307 30.9676119,17.5249942 L30.8661165,17.6161165 L20.75,27.732233 L17.1338835,24.1161165 C16.6457281,23.6279612 15.8542719,23.6279612 15.3661165,24.1161165 C14.9105048,24.5717282 14.8801307,25.2915486 15.2749942,25.7823881 L15.3661165,25.8838835 L19.8661165,30.3838835 C20.3217282,30.8394952 21.0415486,30.8698693 21.5323881,30.4750058 L21.6338835,30.3838835 L32.6338835,19.3838835 C33.1220388,18.8957281 33.1220388,18.1042719 32.6338835,17.6161165 Z\" })))));\n","import { commonLight } from '../../_styles/common';\nexport const self = (vars) => {\n    const { infoColor, successColor, warningColor, errorColor, textColor2, progressRailColor, fontSize, fontWeight } = vars;\n    return {\n        fontSize,\n        fontSizeCircle: '28px',\n        fontWeightCircle: fontWeight,\n        railColor: progressRailColor,\n        railHeight: '8px',\n        iconSizeCircle: '36px',\n        iconSizeLine: '18px',\n        iconColor: infoColor,\n        iconColorInfo: infoColor,\n        iconColorSuccess: successColor,\n        iconColorWarning: warningColor,\n        iconColorError: errorColor,\n        textColorCircle: textColor2,\n        textColorLineInner: 'rgb(255, 255, 255)',\n        textColorLineOuter: textColor2,\n        fillColor: infoColor,\n        fillColorInfo: infoColor,\n        fillColorSuccess: successColor,\n        fillColorWarning: warningColor,\n        fillColorError: errorColor,\n        lineBgProcessing: 'linear-gradient(90deg, rgba(255, 255, 255, .3) 0%, rgba(255, 255, 255, .5) 100%)'\n    };\n};\nconst progressLight = {\n    name: 'Progress',\n    common: commonLight,\n    self\n};\nexport default progressLight;\n","import { c, cB, cM } from '../../../_utils/cssr'; // vars\n// --bezier\n// --fill-color\n// --font-size\n// --font-size-circle\n// --font-weight-circle\n// --icon-color\n// --icon-size-circle\n// --icon-size-line\n// --line-bg-processing\n// --rail-color\n// --rail-height\n// --text-color-circle\n// --text-color-line-inner\n// --text-color-line-outer\n\nexport default c([cB('progress', {\n  display: 'inline-block'\n}, [cB('progress-icon', `\n color: var(--icon-color);\n transition: color .3s var(--bezier);\n `), cM('line', `\n width: 100%;\n display: block;\n `, [cB('progress-content', `\n display: flex;\n align-items: center;\n `, [cB('progress-graph', {\n  flex: 1\n})]), cB('progress-custom-content', {\n  marginLeft: '14px'\n}), cB('progress-icon', `\n width: 30px;\n padding-left: 14px;\n height: var(--icon-size-line);\n line-height: var(--icon-size-line);\n font-size: var(--icon-size-line);\n `, [cM('as-text', `\n color: var(--text-color-line-outer);\n text-align: center;\n width: 40px;\n font-size: var(--font-size);\n padding-left: 4px;\n transition: color .3s var(--bezier);\n `)])]), cM('circle', {\n  width: '120px'\n}, [cB('progress-custom-content', `\n position: absolute;\n left: 50%;\n top: 50%;\n transform: translateX(-50%) translateY(-50%);\n display: flex;\n align-items: center;\n justify-content: center;\n `), cB('progress-text', `\n position: absolute;\n left: 50%;\n top: 50%;\n transform: translateX(-50%) translateY(-50%);\n display: flex;\n align-items: center;\n color: inherit;\n font-size: var(--font-size-circle);\n color: var(--text-color-circle);\n font-weight: var(--font-weight-circle);\n transition: color .3s var(--bezier);\n white-space: nowrap;\n `), cB('progress-icon', `\n position: absolute;\n left: 50%;\n top: 50%;\n transform: translateX(-50%) translateY(-50%);\n display: flex;\n align-items: center;\n color: var(--icon-color);\n font-size: var(--icon-size-circle);\n `)]), cM('multiple-circle', {\n  width: '200px',\n  color: 'inherit'\n}, [cB('progress-text', `\n font-weight: var(--font-weight-circle);\n color: var(--text-color-circle);\n position: absolute;\n left: 50%;\n top: 50%;\n transform: translateX(-50%) translateY(-50%);\n display: flex;\n align-items: center;\n justify-content: center;\n transition: color .3s var(--bezier);\n `)]), cB('progress-content', {\n  position: 'relative'\n}), cB('progress-graph', {\n  position: 'relative'\n}, [cB('progress-graph-circle', [c('svg', {\n  verticalAlign: 'bottom'\n}), cB('progress-graph-circle-fill', `\n stroke: var(--fill-color);\n transition:\n opacity .3s var(--bezier),\n stroke .3s var(--bezier),\n stroke-dasharray .3s var(--bezier);\n `, [cM('empty', {\n  opacity: 0\n})]), cB('progress-graph-circle-rail', `\n transition: stroke .3s var(--bezier);\n overflow: hidden;\n stroke: var(--rail-color);\n `)]), cB('progress-graph-line', [cM('indicator-inside', [cB('progress-graph-line-rail', {\n  height: '16px',\n  borderRadius: '10px'\n}, [cB('progress-graph-line-fill', {\n  height: 'inherit',\n  borderRadius: '10px'\n}), cB('progress-graph-line-indicator', `\n background: #0000;\n white-space: nowrap;\n text-align: right;\n margin-left: 14px;\n margin-right: 14px;\n height: inherit;\n line-height: 16px;\n font-size: 12px;\n color: var(--text-color-line-inner);\n transition: color .3s var(--bezier);\n `)])]), cM('indicator-inside-label', `\n height: 16px;\n display: flex;\n align-items: center;\n `, [cB('progress-graph-line-rail', {\n  flex: 1,\n  transition: 'background-color .3s var(--bezier)'\n}), cB('progress-graph-line-indicator', `\n background: var(--fill-color);\n font-size: 12px;\n transform: translateZ(0);\n display: flex;\n vertical-align: middle;\n height: 16px;\n line-height: 16px;\n padding: 0 10px;\n border-radius: 10px;\n position: absolute;\n white-space: nowrap;\n color: var(--text-color-line-inner);\n transition:\n right .2s var(--bezier),\n color .3s var(--bezier),\n background-color .3s var(--bezier);\n `)]), cB('progress-graph-line-rail', `\n position: relative;\n overflow: hidden;\n height: var(--rail-height);\n border-radius: 5px;\n background-color: var(--rail-color);\n transition: background-color .3s var(--bezier);\n `, [cB('progress-graph-line-fill', `\n background: var(--fill-color);\n position: relative;\n border-radius: 5px;\n height: inherit;\n width: 100%;\n max-width: 0%;\n transition:\n background-color .3s var(--bezier),\n max-width .2s var(--bezier);\n `, [cM('processing', [c('&::after', `\n content: \"\";\n background-image: var(--line-bg-processing);\n animation: progress-processing-animation 2s var(--bezier) infinite;\n `)])])])])])]), c('@keyframes progress-processing-animation', `\n 0% {\n position: absolute;\n left: 0;\n top: 0;\n bottom: 0;\n right: 100%;\n opacity: 1;\n }\n 66% {\n position: absolute;\n left: 0;\n top: 0;\n bottom: 0;\n right: 0;\n opacity: 0;\n }\n 100% {\n position: absolute;\n left: 0;\n top: 0;\n bottom: 0;\n right: 0;\n opacity: 0;\n }\n `)]);","import { defineComponent, h, computed } from 'vue';\nimport { formatLength } from '../../_utils';\nimport { NBaseIcon } from '../../_internal';\nimport { WarningIcon, InfoIcon as InfoCircleIcon, ErrorIcon as ErrorCircleIcon, SuccessIcon as SuccessCircleIcon } from '../../_internal/icons';\nconst iconMap = {\n    success: h(SuccessCircleIcon, null),\n    error: h(ErrorCircleIcon, null),\n    warning: h(WarningIcon, null),\n    info: h(InfoCircleIcon, null)\n};\nexport default defineComponent({\n    name: 'ProgressLine',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        percentage: {\n            type: Number,\n            default: 0\n        },\n        railColor: String,\n        railStyle: [String, Object],\n        fillColor: String,\n        status: {\n            type: String,\n            required: true\n        },\n        indicatorPlacement: {\n            type: String,\n            required: true\n        },\n        indicatorTextColor: String,\n        unit: {\n            type: String,\n            default: '%'\n        },\n        processing: {\n            type: Boolean,\n            required: true\n        },\n        showIndicator: {\n            type: Boolean,\n            required: true\n        },\n        height: [String, Number],\n        railBorderRadius: [String, Number],\n        fillBorderRadius: [String, Number]\n    },\n    setup(props, { slots }) {\n        const styleHeightRef = computed(() => {\n            return formatLength(props.height);\n        });\n        const styleRailBorderRadiusRef = computed(() => {\n            if (props.railBorderRadius !== undefined) {\n                return formatLength(props.railBorderRadius);\n            }\n            if (props.height !== undefined) {\n                return formatLength(props.height, { c: 0.5 });\n            }\n            return '';\n        });\n        const styleFillBorderRadiusRef = computed(() => {\n            if (props.fillBorderRadius !== undefined) {\n                return formatLength(props.fillBorderRadius);\n            }\n            if (props.railBorderRadius !== undefined) {\n                return formatLength(props.railBorderRadius);\n            }\n            if (props.height !== undefined) {\n                return formatLength(props.height, { c: 0.5 });\n            }\n            return '';\n        });\n        return () => {\n            const { indicatorPlacement, railColor, railStyle, percentage, unit, indicatorTextColor, status, showIndicator, fillColor, processing, clsPrefix } = props;\n            return (h(\"div\", { class: `${clsPrefix}-progress-content`, role: \"none\" },\n                h(\"div\", { class: `${clsPrefix}-progress-graph`, \"aria-hidden\": true },\n                    h(\"div\", { class: [\n                            `${clsPrefix}-progress-graph-line`,\n                            {\n                                [`${clsPrefix}-progress-graph-line--indicator-${indicatorPlacement}`]: true\n                            }\n                        ] },\n                        h(\"div\", { class: `${clsPrefix}-progress-graph-line-rail`, style: [\n                                {\n                                    backgroundColor: railColor,\n                                    height: styleHeightRef.value,\n                                    borderRadius: styleRailBorderRadiusRef.value\n                                },\n                                railStyle\n                            ] },\n                            h(\"div\", { class: [\n                                    `${clsPrefix}-progress-graph-line-fill`,\n                                    processing &&\n                                        `${clsPrefix}-progress-graph-line-fill--processing`\n                                ], style: {\n                                    maxWidth: `${props.percentage}%`,\n                                    backgroundColor: fillColor,\n                                    height: styleHeightRef.value,\n                                    borderRadius: styleFillBorderRadiusRef.value\n                                } }, indicatorPlacement === 'inside' ? (h(\"div\", { class: `${clsPrefix}-progress-graph-line-indicator` }, `${percentage}${unit}`)) : null)))),\n                showIndicator && indicatorPlacement === 'outside' ? (h(\"div\", null, slots.default ? (h(\"div\", { class: `${clsPrefix}-progress-custom-content`, style: {\n                        color: indicatorTextColor\n                    }, role: \"none\" }, slots.default())) : status === 'default' ? (h(\"div\", { role: \"none\", class: `${clsPrefix}-progress-icon ${clsPrefix}-progress-icon--as-text`, style: {\n                        color: indicatorTextColor\n                    } },\n                    percentage,\n                    unit)) : (h(\"div\", { class: `${clsPrefix}-progress-icon`, \"aria-hidden\": true },\n                    h(NBaseIcon, { clsPrefix: clsPrefix }, { default: () => iconMap[status] }))))) : null));\n        };\n    }\n});\n","import { h, defineComponent, computed } from 'vue';\nimport { NBaseIcon } from '../../_internal';\nimport { SuccessIcon, ErrorIcon, WarningIcon, InfoIcon } from '../../_internal/icons';\nconst iconMap = {\n    success: h(SuccessIcon, null),\n    error: h(ErrorIcon, null),\n    warning: h(WarningIcon, null),\n    info: h(InfoIcon, null)\n};\nexport default defineComponent({\n    name: 'ProgressCircle',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        status: {\n            type: String,\n            required: true\n        },\n        strokeWidth: {\n            type: Number,\n            required: true\n        },\n        fillColor: String,\n        railColor: String,\n        railStyle: [String, Object],\n        percentage: {\n            type: Number,\n            default: 0\n        },\n        showIndicator: {\n            type: Boolean,\n            reqiuired: true\n        },\n        indicatorTextColor: String,\n        unit: String,\n        viewBoxWidth: {\n            type: Number,\n            required: true\n        }\n    },\n    setup(props, { slots }) {\n        const strokeDasharrayRef = computed(() => {\n            return `${Math.PI * props.percentage}, ${props.viewBoxWidth * 8}`;\n        });\n        return () => {\n            const { fillColor, railColor, railStyle, strokeWidth, status, percentage, showIndicator, indicatorTextColor, unit, clsPrefix } = props;\n            return (h(\"div\", { class: `${clsPrefix}-progress-content`, role: \"none\" },\n                h(\"div\", { class: `${clsPrefix}-progress-graph`, \"aria-hidden\": true },\n                    h(\"div\", { class: `${clsPrefix}-progress-graph-circle` },\n                        h(\"svg\", { viewBox: \"0 0 110 110\" },\n                            h(\"g\", null,\n                                h(\"path\", { class: `${clsPrefix}-progress-graph-circle-rail`, d: \"m 55 5 a 50 50 0 1 1 0 100 a 50 50 0 1 1 0 -100\", \"stroke-width\": strokeWidth * 1.1, \"stroke-linecap\": \"round\", fill: \"none\", style: [\n                                        {\n                                            strokeDashoffset: 0,\n                                            stroke: railColor\n                                        },\n                                        railStyle\n                                    ] })),\n                            h(\"g\", null,\n                                h(\"path\", { class: [\n                                        `${clsPrefix}-progress-graph-circle-fill`,\n                                        percentage === 0 &&\n                                            `${clsPrefix}-progress-graph-circle-fill--empty`\n                                    ], d: \"m 55 5 a 50 50 0 1 1 0 100 a 50 50 0 1 1 0 -100\", \"stroke-width\": strokeWidth * 1.1, \"stroke-linecap\": \"round\", fill: \"none\", style: {\n                                        strokeDasharray: strokeDasharrayRef.value,\n                                        strokeDashoffset: 0,\n                                        stroke: fillColor\n                                    } }))))),\n                showIndicator ? (h(\"div\", null, slots.default ? (h(\"div\", { class: `${clsPrefix}-progress-custom-content`, role: \"none\" }, slots.default())) : status !== 'default' ? (h(\"div\", { class: `${clsPrefix}-progress-icon`, \"aria-hidden\": true },\n                    h(NBaseIcon, { clsPrefix: clsPrefix }, {\n                        default: () => iconMap[status]\n                    }))) : (h(\"div\", { class: `${clsPrefix}-progress-text`, style: {\n                        color: indicatorTextColor\n                    }, role: \"none\" },\n                    h(\"span\", { class: `${clsPrefix}-progress-text__percentage` }, percentage),\n                    h(\"span\", { class: `${clsPrefix}-progress-text__unit` }, unit))))) : null));\n        };\n    }\n});\n","import { h, defineComponent, computed } from 'vue';\nfunction circlePath(r, sw, vw = 100) {\n    return `m ${vw / 2} ${vw / 2 - r} a ${r} ${r} 0 1 1 0 ${2 * r} a ${r} ${r} 0 1 1 0 -${2 * r}`;\n}\nexport default defineComponent({\n    name: 'ProgressMultipleCircle',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        viewBoxWidth: {\n            type: Number,\n            required: true\n        },\n        percentage: {\n            type: Array,\n            default: [0]\n        },\n        strokeWidth: {\n            type: Number,\n            required: true\n        },\n        circleGap: {\n            type: Number,\n            required: true\n        },\n        showIndicator: {\n            type: Boolean,\n            required: true\n        },\n        fillColor: {\n            type: Array,\n            default: () => []\n        },\n        railColor: {\n            type: Array,\n            default: () => []\n        },\n        railStyle: {\n            type: Array,\n            default: () => []\n        }\n    },\n    setup(props, { slots }) {\n        const strokeDasharrayRef = computed(() => {\n            const strokeDasharrays = props.percentage.map((v, i) => `${((Math.PI * v) / 100) *\n                (props.viewBoxWidth / 2 -\n                    (props.strokeWidth / 2) * (1 + 2 * i) -\n                    props.circleGap * i) *\n                2}, ${props.viewBoxWidth * 8}`);\n            return strokeDasharrays;\n        });\n        return () => {\n            const { viewBoxWidth, strokeWidth, circleGap, showIndicator, fillColor, railColor, railStyle, percentage, clsPrefix } = props;\n            return (h(\"div\", { class: `${clsPrefix}-progress-content`, role: \"none\" },\n                h(\"div\", { class: `${clsPrefix}-progress-graph`, \"aria-hidden\": true },\n                    h(\"div\", { class: `${clsPrefix}-progress-graph-circle` },\n                        h(\"svg\", { viewBox: `0 0 ${viewBoxWidth} ${viewBoxWidth}` }, percentage.map((p, index) => {\n                            return (h(\"g\", { key: index },\n                                h(\"path\", { class: `${clsPrefix}-progress-graph-circle-rail`, d: circlePath(viewBoxWidth / 2 -\n                                        (strokeWidth / 2) * (1 + 2 * index) -\n                                        circleGap * index, strokeWidth, viewBoxWidth), \"stroke-width\": strokeWidth, \"stroke-linecap\": \"round\", fill: \"none\", style: [\n                                        {\n                                            strokeDashoffset: 0,\n                                            stroke: railColor[index]\n                                        },\n                                        railStyle[index]\n                                    ] }),\n                                h(\"path\", { class: [\n                                        `${clsPrefix}-progress-graph-circle-fill`,\n                                        p === 0 &&\n                                            `${clsPrefix}-progress-graph-circle-fill--empty`\n                                    ], d: circlePath(viewBoxWidth / 2 -\n                                        (strokeWidth / 2) * (1 + 2 * index) -\n                                        circleGap * index, strokeWidth, viewBoxWidth), \"stroke-width\": strokeWidth, \"stroke-linecap\": \"round\", fill: \"none\", style: {\n                                        strokeDasharray: strokeDasharrayRef.value[index],\n                                        strokeDashoffset: 0,\n                                        stroke: fillColor[index]\n                                    } })));\n                        })))),\n                showIndicator && slots.default ? (h(\"div\", null,\n                    h(\"div\", { class: `${clsPrefix}-progress-text` }, slots.default()))) : null));\n        };\n    }\n});\n","import { h, computed, defineComponent } from 'vue';\nimport { useConfig, useTheme } from '../../_mixins';\nimport { createKey } from '../../_utils';\nimport { progressLight } from '../styles';\nimport style from './styles/index.cssr';\nimport Line from './Line';\nimport Circle from './Circle';\nimport MultipleCircle from './MultipleCircle';\nconst progressProps = Object.assign(Object.assign({}, useTheme.props), { processing: Boolean, type: {\n        type: String,\n        default: 'line'\n    }, status: {\n        type: String,\n        default: 'default'\n    }, railColor: [String, Array], railStyle: [String, Array], color: [String, Array], viewBoxWidth: {\n        type: Number,\n        default: 100\n    }, strokeWidth: {\n        type: Number,\n        default: 7\n    }, percentage: [Number, Array], unit: {\n        type: String,\n        default: '%'\n    }, showIndicator: {\n        type: Boolean,\n        default: true\n    }, indicatorPosition: {\n        type: String,\n        default: 'outside'\n    }, indicatorPlacement: {\n        type: String,\n        default: 'outside'\n    }, indicatorTextColor: String, circleGap: {\n        type: Number,\n        default: 1\n    }, height: Number, borderRadius: [String, Number], fillBorderRadius: [String, Number] });\nexport default defineComponent({\n    name: 'Progress',\n    props: progressProps,\n    setup(props) {\n        const mergedIndicatorPlacementRef = computed(() => {\n            return props.indicatorPlacement || props.indicatorPosition;\n        });\n        const { mergedClsPrefixRef } = useConfig(props);\n        const themeRef = useTheme('Progress', 'Progress', style, progressLight, props, mergedClsPrefixRef);\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedIndicatorPlacement: mergedIndicatorPlacementRef,\n            cssVars: computed(() => {\n                const { status } = props;\n                const { common: { cubicBezierEaseInOut }, self: { fontSize, fontSizeCircle, railColor, railHeight, iconSizeCircle, iconSizeLine, textColorCircle, textColorLineInner, textColorLineOuter, lineBgProcessing, fontWeightCircle, [createKey('iconColor', status)]: iconColor, [createKey('fillColor', status)]: fillColor } } = themeRef.value;\n                return {\n                    '--bezier': cubicBezierEaseInOut,\n                    '--fill-color': fillColor,\n                    '--font-size': fontSize,\n                    '--font-size-circle': fontSizeCircle,\n                    '--font-weight-circle': fontWeightCircle,\n                    '--icon-color': iconColor,\n                    '--icon-size-circle': iconSizeCircle,\n                    '--icon-size-line': iconSizeLine,\n                    '--line-bg-processing': lineBgProcessing,\n                    '--rail-color': railColor,\n                    '--rail-height': railHeight,\n                    '--text-color-circle': textColorCircle,\n                    '--text-color-line-inner': textColorLineInner,\n                    '--text-color-line-outer': textColorLineOuter\n                };\n            })\n        };\n    },\n    render() {\n        // it's ok to expand all prop here since no slots' deps\n        const { type, cssVars, indicatorTextColor, showIndicator, status, railColor, railStyle, color, percentage, viewBoxWidth, strokeWidth, mergedIndicatorPlacement, unit, borderRadius, fillBorderRadius, height, processing, circleGap, mergedClsPrefix, $slots } = this;\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-progress`,\n                `${mergedClsPrefix}-progress--${type}`,\n                `${mergedClsPrefix}-progress--${status}`\n            ], style: cssVars, \"aria-valuemax\": 100, \"aria-valuemin\": 0, \"aria-valuenow\": percentage, role: type === 'circle' || type === 'line' ? 'progressbar' : 'none' }, type === 'circle' ? (h(Circle, { clsPrefix: mergedClsPrefix, status: status, showIndicator: showIndicator, indicatorTextColor: indicatorTextColor, railColor: railColor, fillColor: color, railStyle: railStyle, percentage: percentage, viewBoxWidth: viewBoxWidth, strokeWidth: strokeWidth, unit: unit }, $slots)) : type === 'line' ? (h(Line, { clsPrefix: mergedClsPrefix, status: status, showIndicator: showIndicator, indicatorTextColor: indicatorTextColor, railColor: railColor, fillColor: color, railStyle: railStyle, percentage: percentage, processing: processing, indicatorPlacement: mergedIndicatorPlacement, unit: unit, fillBorderRadius: fillBorderRadius, railBorderRadius: borderRadius, height: height }, $slots)) : type === 'multiple-circle' ? (h(MultipleCircle, { clsPrefix: mergedClsPrefix, strokeWidth: strokeWidth, railColor: railColor, fillColor: color, railStyle: railStyle, viewBoxWidth: viewBoxWidth, percentage: percentage, showIndicator: showIndicator, circleGap: circleGap }, $slots)) : null));\n    }\n});\n","import {NButton, NInput, NProgress, NSpin} from 'naive-ui';\r\nimport {computed, defineComponent, onBeforeUnmount, onMounted, ref} from 'vue';\r\nimport {getPhotoListPage} from '../utils/female-anatomy-for-artist-crawler';\r\nimport PhotoDataset from '../utils/PhotoDataset';\r\nimport PhotoPoseLandmarks from '../utils/PhotoPoseLandmarks';\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        NButton,\r\n        NInput,\r\n        NSpin,\r\n        NProgress,\r\n    },\r\n    setup() {\r\n        const dataset = new PhotoDataset();\r\n        const datasetLoading = ref(false);\r\n        const datasetLength = ref(0);\r\n\r\n        const totalPages = ref(0);\r\n        const pageStart = ref('1');\r\n        const pageEnd = ref('1');\r\n\r\n        let photosPerPage = 60;\r\n        const processing = ref(false);\r\n        const stop = ref(false);\r\n        const total = ref(0);\r\n        const progress = ref(0);\r\n        const percent = computed(function () {\r\n            return Math.round(progress.value / total.value * 100);\r\n        });\r\n        const progressText = computed(function () {\r\n            return `${progress.value} / ${total.value}`;\r\n        });\r\n        const remainingSecs = ref(0);\r\n        const remaining = computed(function () {\r\n            function padZero(val: number) {\r\n                return val < 10 ? '0' + val : val + '';\r\n            }\r\n\r\n            let dt = Math.round(remainingSecs.value);\r\n            const secs = dt % 60;\r\n            dt = Math.floor(dt / 60);\r\n            const mins = dt % 60;\r\n            dt = Math.floor(dt / 60);\r\n            const hours = dt;\r\n            return `${padZero(hours)}:${padZero(mins)}:${padZero(secs)}`;\r\n        });\r\n\r\n        const detectResult = ref<PhotoPoseLandmarks[]>([]);\r\n\r\n        onMounted(async function () {\r\n            try {\r\n                datasetLoading.value = true;\r\n                await dataset.load();\r\n                await dataset.loadAllChunks();\r\n                datasetLength.value = dataset.size;\r\n\r\n                const page = await getPhotoListPage(1);\r\n                totalPages.value = page.numOfPages;\r\n                pageEnd.value = page.numOfPages + '';\r\n                photosPerPage = page.photos.length || photosPerPage;\r\n            } finally {\r\n                datasetLoading.value = false;\r\n            }\r\n        });\r\n\r\n        let tid: any = 0;\r\n\r\n        function startCountdown() {\r\n            if (!tid) {\r\n                tid = setInterval(function () {\r\n                    remainingSecs.value = Math.max(0, remainingSecs.value - 1);\r\n                }, 1000);\r\n            }\r\n        }\r\n\r\n        function stopCountdown() {\r\n            if (tid) {\r\n                clearInterval(tid);\r\n                tid = 0;\r\n            }\r\n        }\r\n\r\n        onBeforeUnmount(function () {\r\n            stopCountdown();\r\n        });\r\n\r\n        async function process() {\r\n            try {\r\n                processing.value = true;\r\n                total.value = 0;\r\n                progress.value = 0;\r\n                remainingSecs.value = 0;\r\n                stop.value = false;\r\n                const start = Number(pageStart.value);\r\n                const end = Number(pageEnd.value);\r\n                total.value = photosPerPage * (end - start + 1);\r\n                remainingSecs.value = 15 * total.value;\r\n                startCountdown();\r\n                let avgTime = 15000;\r\n                for (let pageNum = end; pageNum >= start; --pageNum) {\r\n                    if (stop.value) {\r\n                        break;\r\n                    }\r\n                    const page = await getPhotoListPage(pageNum);\r\n                    if (page.photos.length < photosPerPage) {\r\n                        total.value -= (photosPerPage - page.photos.length);\r\n                    }\r\n                    for (let photo of page.photos) {\r\n                        if (await dataset.has(photo.id)) {\r\n                            // skip\r\n                        } else {\r\n                            console.log(`Processing #${photo.id} in page ${pageNum}`);\r\n                            const startTime = Date.now();\r\n                            const result = new PhotoPoseLandmarks();\r\n                            await result.loadByWorker(photo.id);\r\n                            detectResult.value.push(result);\r\n                            if (result.normalized?.length) {\r\n                                await dataset.add(result);\r\n                                await dataset.writeToFile();\r\n                                datasetLength.value += 1;\r\n                                let dt = Date.now() - startTime;\r\n                                if (progress.value > 1) {\r\n                                    avgTime = (avgTime * progress.value + dt) / (progress.value + 1);\r\n                                }\r\n                            }\r\n                        }\r\n                        progress.value += 1;\r\n                        if (stop.value || total.value === progress.value) {\r\n                            break;\r\n                        }\r\n                        remainingSecs.value = Math.round(avgTime / 1000 * (total.value - progress.value));\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                alert('An error occurred: ' + e);\r\n            }\r\n            stopCountdown();\r\n            processing.value = false;\r\n        }\r\n\r\n        return {\r\n            dataset,\r\n            datasetLoading,\r\n            datasetLength,\r\n\r\n            totalPages,\r\n            pageStart,\r\n            pageEnd,\r\n\r\n            processing,\r\n            stop,\r\n            total,\r\n            progress,\r\n            percent,\r\n            progressText,\r\n            remainingSecs,\r\n            remaining,\r\n\r\n            detectResult,\r\n\r\n            process,\r\n        };\r\n    }\r\n});\r\n"],"names":["iconMap","SuccessCircleIcon","ErrorCircleIcon","InfoCircleIcon","progressLight"],"mappings":"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"}